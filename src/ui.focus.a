;license:MIT
;(c) 2022 by 4am
;
; drawing routines for focus rectangles
;

; public functions:
; - DrawFocusRectangle
; - DrawFocusRectangleAt
; - ClearFocusRectangle
; - ClearFocusRectangleAt
; - GetFocusCoordinates

; to draw focus rectangle around a single tile:
; for X in (top row - 2) .., (bottom row + 2) inclusive
;   (X, left byte - 1) OR= 0xC0
;   (X, right byte + 1) OR= 0xC0
; (top row - 2, left byte) = 0xAA
; (top row - 2, right byte) = 0xD5
; (bottom row + 2, left byte) = 0xAA
; (bottom row + 2, right byte) = 0xD5
;
; to remove focus rectangle around a single tile:
; for X in (top row - 2) ... (bottom row + 2) inclusive
;   (X, left byte - 1) AND= 0xBF
;   (X, right byte + 1) AND= 0xBF
; (top row - 2, left byte) = 0x80
; (top row - 2, right byte) = 0x80
; (bottom row + 2, left byte) = 0x80
; (bottom row + 2, right byte) = 0x80

kFocusEntireRow           = 0
kFocusEntireColumn        = 1
kFocus1x1                 = 2
kFocus1x3                 = 3
kFocus3x1                 = 4

kFocusRowCounts
         !byte 1,0,1,1,3
kFocusColumnCounts
         !byte 0,1,1,3,1

DrawFocusRectangle
         jsr   GetFocusCoordinates
         lda   #kFocus1x1
DrawFocusRectangleAt
; in:    X = logical row (0x00..0x0F)
;        Y = logical column (0x00..0x0F)
;        A = type (see above)
;        pointer is hidden
         pha
         jsr   MaybeUpdateFocusCounts
         +LogicalColumnToPhysicalColumn
         sty   HTAB
         ldy   WideHGRTops, x
         dey
         dey                         ; start two rows above tile
         sty   char_row
         pla
         tax
         lda   kFocusColumnCounts, x
         sta   column_count
         lda   kFocusRowCounts, x
         tax
         clc
         lda   #0
-        adc   #11
         dex
         bne   -
         tax                         ; total HGR row count
@drawLastRow
         sec
@drawRowLoop
         ldy   char_row
         lda   HGRLO, y
         sta   hgr_base_ptr
         lda   HGRHI, y
         sta   hgr_base_ptr+1
         bcc   @skipHorizontal
         clc
         ldy   HTAB
         lda   column_count
         sta   column_index
@drawColumnLoop
         lda   #$AA                  ; draw horizontal line above and below tile
         sta   (hgr_base_ptr), y
         iny
         lda   #$D5
         sta   (hgr_base_ptr), y
         iny
         dec   column_index
         bne   @drawColumnLoop
@skipHorizontal
         ldy   HTAB
         dey
         lda   (hgr_base_ptr), y
         ora   #$C0                  ; draw red line to the left of tile
         sta   (hgr_base_ptr), y
         lda   column_count
         sta   column_index
-        iny
         iny
         dec   column_index
         bne   -
         lda   (hgr_base_ptr), y
         ora   #$C0                  ; draw red line to the right of tile
         sta   (hgr_base_ptr), y
         inc   char_row
         dex
         beq   @drawLastRow
         cpx   #$FF
         bne   @drawRowLoop
         rts

ClearFocusRectangle
         jsr   GetFocusCoordinates
         lda   #kFocus1x1
ClearFocusRectangleAt
; in:    X = logical row (0x00..0x0F)
;        Y = logical column (0x00..0x0F)
;        pointer is hidden
         pha
         jsr   MaybeUpdateFocusCounts
         +LogicalColumnToPhysicalColumn
         sty   HTAB
         ldy   WideHGRTops, x
         dey
         dey                         ; start two rows above tile
         sty   char_row
         pla
         tax
         lda   kFocusColumnCounts, x
         sta   column_count
         lda   kFocusRowCounts, x
         tax
         clc
         lda   #0
-        adc   #11
         dex
         bne   -
         tax                         ; total HGR row count
@clearLastRow
         sec
@clearRowLoop
         ldy   char_row
         lda   HGRLO, y
         sta   hgr_base_ptr
         lda   HGRHI, y
         sta   hgr_base_ptr+1
         bcc   @skipHorizontal
         clc
         ldy   HTAB
         lda   column_count
         sta   column_index
@clearColumnLoop
         lda   #$80                  ; erase horizontal line above and below tile (these rows are always black)
         sta   (hgr_base_ptr), y
         iny
         sta   (hgr_base_ptr), y
         iny
         dec   column_index
         bne   @clearColumnLoop
@skipHorizontal
         ldy   HTAB
         dey
         lda   (hgr_base_ptr), y
         and   #$BF                  ; erase red line to the left of tile
         sta   (hgr_base_ptr), y
         lda   column_count
         sta   column_index
-        iny
         iny
         dec   column_index
         bne   -
         lda   (hgr_base_ptr), y
         and   #$BF                  ; erase red line to the right of tile
         sta   (hgr_base_ptr), y
         inc   char_row
         dex
         beq   @clearLastRow
         cpx   #$FF
         bne   @clearRowLoop
         rts

GetFocusCoordinates
         ldx   gFocusedRow
         ldy   gFocusedColumn
         rts

;------------------------------------------------------------------------------
; internal functions

MaybeUpdateFocusCounts
         cmp   #kFocusEntireRow
         bne   +
         sty   tmpy                  ; calculate actual column count
         lda   #8
         sec
         sbc   tmpy
         asl
         sta   kFocusColumnCounts
         rts
+        cmp   #kFocusEntireColumn
         bne   +
         stx   tmpx                  ; calculate actual row count
         lda   #8
         sec
         sbc   tmpx
         asl
         sta   kFocusRowCounts+1
+        rts
