;license:MIT
;(c) 2022 by 4am
;

;------------------------------------------------------------------------------
; YE OLDE GRAND UNIFIED MEMORY MAP
;
; MAIN MEMORY
; 0800..08FF - unpacking buffer before final transformation
; 0900..0BFF - ProDOS file buffer
;------------------------------------------------------------------------------

; soft switches
KBD =          $C000      ; last key pressed (if any)
STOREOFF =     $C000      ; STA then use the following 4 flags:
READMAINMEM =  $C002      ; STA to read from main mem
READAUXMEM =   $C003      ; STA to read from aux mem
WRITEMAINMEM = $C004      ; STA to write to main mem
WRITEAUXMEM =  $C005      ; STA to write to aux mem
CLRC3ROM =     $C00A      ; STA to use internal Slot 3 ROM (required to use 128K and DHGR)
SETC3ROM =     $C00B      ; STA to use external Slot 3 ROM (required to detect VidHD in slot 3)
CLR80VID =     $C00C      ; 40 columns (also used to get out of DHGR mode)
SET80VID =     $C00D      ; 80 columns (also used to get into DHGR mode)
PRIMARYCHARSET= $C00E     ; no mousetext for you
CLEARKBD =     $C010      ; clear last key pressed
SPEAKER =      $C030      ; chirp chirp
CLOCKCTL =     $C034      ; bits 0-3 are IIgs border color (also VidHD)
GFXMODE =      $C050
TEXTMODE =     $C051
FULLGFX =      $C052
MIXGFX =       $C053
PAGE1 =        $C054      ; page 1 (affects text, HGR, DHGR)
PAGE2 =        $C055      ; page 2 (affects text, HGR, DHGR)
LORES =        $C056
HIRES =        $C057

; ROM routines and addresses
ROM_TEXT =     $FB2F
ROM_MACHINEID =$FBB3
ROM_HOME =     $FC58
ROM_WAIT =     $FCA8
ROM_COUT =     $FDED
ROM_NORMAL =   $FE84      ; NORMAL text (instead of INVERSE or FLASH)
ROM_IN0 =      $FE89      ; SETKBD
ROM_PR0 =      $FE93      ; SETVID
HTAB         = $24        ; byte
VTAB         = $25        ; byte

; application-specific addresses
HGRLO        = $0100      ; 0xC0 bytes
HGRHI        = $0300      ; 0xC0 bytes
read_buffer  = $03C0      ; 0x002D bytes
unpack_base  = $0800      ; 0x0100 bytes, page-aligned
file_buffer  = $0900      ; 0x0400 bytes

; application-specific constants
logical_board_size        = $DF      ; byte
row_empty_counts          = $E0      ; 0x10 bytes

; font drawing
hgr_base_ptr              = $F0      ; word
char_index                = $F2      ; byte
char_row                  = $F3      ; byte

; solver
board_base_ptr            = $F4      ; word
colorcount1               = $F6      ; byte
row1                      = $F6      ; byte
colorcount2               = $F7      ; byte
row2                      = $F7      ; byte
tile_column               = $F8      ; byte
board_base_ptr2           = $F9      ; word

unpack_ptr                = $F9      ; word
string_len                = $FB      ; byte
string_ptr                = $FC      ; word
tmpx                      = $FE      ; byte
tmpy                      = $FF      ; byte
