;license:MIT
;(c) 2022 by 4am
;
; drawing routines for the puzzle board
;
; Public functions:
; - DrawBoardForTitle
; - DrawBoardForUser
; - DrawBoardAt
; - SolveBoardAt
; - FindEmptyCoordinatesForUser

DrawBoardForTitle
         ldx   #>kTitleBoardBuffer
         +HIDE_NEXT_2_BYTES
         ; /!\ execution falls through here to DrawBoardForUser
DrawBoardForUser
         ldx   #>kUserBoardBuffer
         ; /!\ execution falls through here to DrawBoardAt

;------------------------------------------------------------------------------
; DrawBoardAt
; draw game board on screen
;
; in:    X = high byte of page-aligned board buffer
;        pointer is hidden
; out:   all flags and registers clobbered
;------------------------------------------------------------------------------
DrawBoardAt
         stx   board_base_ptr+1
         stx   @a+2
         lda   #$FF
         sta   @a+1
         ldx   #$0F
-        ldy   #$0F
@a       lda   $FDFD                 ; SMC
         and   #TILE_MASK
         cmp   #kWhiteTile
         beq   @draw
         cmp   #kBlueTile
         bne   @nodraw
@draw    jsr   DrawLargeCharacter
@nodraw  dec   @a+1
         dey
         bpl   @a
         dex
         bpl   -
         rts

SolveBoardAt
; in:    X = high byte of page-aligned board buffer
;        Y = logical board size (6,8,10,12,14,16)
         stx   board_base_ptr_original
         stx   @a+2
         sty   logical_board_size

         ; create transposed board buffer to speed up solving
         jsr   TransposeBoardIntoBackupBuffer

@loop
         jsr   FindValidMove
         bcs   @exit

         ; draw tile
         bit   GFXMODE
         jsr   DrawLargeCharacter

         ; update board buffer and transposed board buffer
         pha
         +CalculateRowBase
         sta   @a+1
         lda   kRowBases, y
         sta   @b+1
         pla
@a       sta   $FDFD, y              ; SMC
@b       sta   kTransposedBoardBuffer, x ; SMC
         bne   @loop                 ; always branches
@exit
         rts

;------------------------------------------------------------------------------
; FindEmptyCoordinatesForUser
; find the top-left-most board coordinates with no tile
;
; in:    none
; out:   C = 0 if found empty coordinates, then
;          X = logical row (0x00..0x0F)
;          Y = logical column (0x00..0x0F)
;        C = 1 if no empty coordinates found (board is full)
;------------------------------------------------------------------------------
FindEmptyCoordinatesForUser
         ldx   #>kUserBoardBuffer
         stx   board_base_ptr+1
         ldy   #0
         sty   board_base_ptr
-        lda   (board_base_ptr), y
         beq   YIndexToXYCoordinates
         iny
         bne   -
         sec
         rts
YIndexToXYCoordinates
         tya
         lsr
         lsr
         lsr
         lsr
         tax
         tya
         and   #$0F
         tay
         clc
         rts
