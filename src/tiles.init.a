;license:MIT
;(c) 2023 by 4am
;
; initialize program, generate lookup tables and dynamically generated code
;

         ldx   #$FF
         txs
         +READ_ROM_NO_WRITE
         sta   PRIMARYCHARSET
         sta   CLR80VID
         sta   STOREOFF
         sta   READMAINMEM
         sta   WRITEMAINMEM
         jsr   ROM_TEXT
         jsr   ROM_HOME
         jsr   ROM_NORMAL
         jsr   ROM_IN0
         jsr   ROM_PR0

         +BUILD_HGR_LOOKUP_TABLES HGRLO, HGRHI

         ; build EnableAccelerator and DisableAccelerator functions
         ; and copy them into place
         jsr   BuildAcceleratorFunction
         +ST16 @accelSrc
         dex
-
@accelSrc=*+1
         lda   $FDFD, x
         sta   DisableAccelerator, x
         dex
         bpl   -

         ; relocate program code to $4000
-        inc   FM+2
         inc   FMDEST+2
         lda   FM+2
         cmp   #>LastMover
         bcc   -
         ldx   #0
FM       lda   FirstMover, x
FMDEST   sta   $4000, x
         inx
         bne   FM
         dec   FM+2
         dec   FMDEST+2
         lda   FMDEST+2
         cmp   #$40
         bcs   FM

         ; build model-specific VBL code (used for drawing pointer)
         jsr   BuildVBLFunction

         ; load preferences
         jsr   LoadPrefs

         ; set up some globals used by FindValidMove
         ldx   #0
         stx   start_y
         dex
         stx   board_base_shift_minus_1
         stx   maybe_xx0
         stx   maybe_x0x
         dex
         stx   board_base_shift_minus_2
         ldx   #1
         stx   board_base_shift_plus_1
         inx
         stx   board_base_shift_plus_2
         ldy   #$00
--       ldx   #$0E
         lda   #$00
-        sta   maybe_0xx, y
         iny
         dex
         bne   -
         lda   #$FF
         sta   maybe_0xx, y
         iny
         sta   maybe_0xx, y
         iny
         bne   --

         ; load random board for title (out of first 512 16x16 boards)
         jsr   GetTime
         lda   $BF93
         and   #%00000001
         tay
         lda   $BF93
         and   #%11111110
         eor   $BF92
         eor   $BF91
         eor   $BF90
         ldx   #kTitleBoardSize
         stx   logical_board_size
         ldx   #>kTitleBoardBuffer
         jsr   nth

         ; disable accelerator for Mockingboard detection (required)
         ; but also leave it disabled for duration of play
         jsr   DisableAccelerator

         ; now safe to detect Mockingboard
         jsr   mockingboard_detect
         ;clc                                   ; DEBUG uncomment to pretend there's no Mockingboard
         php
         ror   gSoundAvailable
         plp
         bcc   ++
         jsr   mockingboard_patch               ; self-modify Mockingboard code for slot independence

         ; load main music
         jsr   LoadFile1Shot
         !word MAIN_MUSIC_FILE
         !word MainMusic
         !word EndMainMusic-MainMusic
         !word file_buffer
         bcc   +

@musicLoadError
         clc
         ror   gSoundAvailable                  ; can't load music file, disable sound
         jmp   ++

+
         ; load win music
         jsr   LoadFile1Shot
         !word WIN_MUSIC_FILE
         !word WinMusic
         !word EndWinMusic-WinMusic
         !word file_buffer
         bcs   -

         lda   #>MainMusic
         jsr   pt3_init_song                    ; prepare song data

++
         lda   #40
         sta   gCurrentMessage
         jmp   Start

         !source "src/hw.vbl.init.a"
!ifdef PT3_ENABLE_APPLE_IIC {
         !source "src/pt3/pt3_lib_detect_model.s"
}
         !source "src/pt3/pt3_lib_mockingboard_detect.s"
         !source "src/pt3/pt3_lib_init.s"
MAIN_MUSIC_FILE
         !byte @end-@start
@start
         !text "SMALLBLUES.PT3"
@end
WIN_MUSIC_FILE
         !byte @end-@start
@start
         !text "RUSHHOUR.PT3"
@end
