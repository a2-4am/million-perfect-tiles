;license:MIT
;(c) 2022 by 4am
;
; high-level sound routines
;
; Public functions:
; - ToggleSoundPref
; - ToggleSoundPrefAndStartMusic
; - StartMusic
; - StopMusic
;
; Public variables:
; - gSoundPref
;

gSoundPref
         !byte $80                   ; USE BIT 7 ONLY

;------------------------------------------------------------------------------
; ToggleSoundPref
; toggle sound preference and stop music immediately if sound is now off
;
; safe to call whenever you want, as often as you want, after program init
;
; in:    gSoundAvailable populated
; out:   all registers and flags clobbered
;------------------------------------------------------------------------------
ToggleSoundPref
         lda   gSoundPref
         and   #$80
         eor   #$80
         sta   gSoundPref
         bne   +
         jsr   StopMusic
+        jmp   SavePrefs

;------------------------------------------------------------------------------
; ToggleSoundPrefAndStartMusic
; toggle sound preference and stop music immediately if sound is now off, or
; start music immediately if sound is now on
;
; safe to call whenever you want, as often as you want, after program init
;
; in:    gSoundAvailable populated
; out:   all registers and flags clobbered
;------------------------------------------------------------------------------
ToggleSoundPrefAndStartMusic
         jsr   ToggleSoundPref
         bit   gSoundPref
         bpl   MUSIC_RTS
         ; /!\ execution falls through here to StartMusic

;------------------------------------------------------------------------------
; StartMusic
; start music, if available and desired and not already started
;
; safe to call whenever you want, as often as you want, after program init
; (no need to balance calls with StopMusic)
;
; in:    gSoundAvailable populated
;        PT3lib initialized
; out:   all registers and flags clobbered
;------------------------------------------------------------------------------
StartMusic
         bit   gSoundAvailable
         bpl   MUSIC_RTS             ; no Mockingboard -> no music
         bit   gSoundPref
         bpl   MUSIC_RTS             ; user turned off sound -> no music
         ldx   PT3_PRODOS_ALLOC+1
         bne   MUSIC_RTS             ; Mockingboard interrupt already installed
         stx   DONE_PLAYING
         inx
         stx   LOOP
         jsr   mockingboard_init
         jsr   mockingboard_setup_interrupt     ; exits with I=1
         jsr   mockingboard_shut_up
         cli                         ; I=0, will immediately start playing music
MUSIC_RTS
         rts

;------------------------------------------------------------------------------
; StopMusic
; stop music, if playing
;
; safe to call whenever you want, as often as you want, after program init
; (no need to balance calls with StartMusic)
;
; in:    gSoundAvailable populated
; out:   all registers and flags clobbered
;------------------------------------------------------------------------------
StopMusic
         bit   gSoundAvailable
         bpl   MUSIC_RTS
         jmp   mockingboard_shut_down

StartMainMusic
         lda   #>MainMusic
         cmp   PT3_SONG_PTR+1
         beq   +
         jsr   pt3_switch_song
+        jmp   StartMusic

StartWinMusic
         lda   #>WinMusic
         cmp   PT3_SONG_PTR+1
         beq   +
         jsr   pt3_switch_song
+        jmp   StartMusic
