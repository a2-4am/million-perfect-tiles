;license:MIT
;(c) 2022 by 4am
;
; main menu
;
; Public functions:
; - MainMenuEventLoop
;

;------------------------------------------------------------------------------
; MainMenuEventLoop
; display main menu
;
; in:    C clear if screen is already cleared and menu page is already drawn
;          (will happen if using arrow keys to move selection indicator)
;        C set if full screen clear & redraw is required
;          (will happen the first time called, or
;          if user returns to main menu from any other screen)
; out:   Z = 0
;------------------------------------------------------------------------------
MainMenuEventLoop
         bcc   @loop
         jsr   Home
         ; pointer is hidden (by Home)
         jsr   DrawMainMenuBackground
         jsr   DrawMainMenuText
         jsr   ClearPendingEvents
         jsr   StartMainMusic
@loop
         jsr   WaitNextEvent
         cpx   #kEventMouseMove
         beq   @onMouseMove
         cpx   #kEventClick
         beq   @onClick
         cpx   #kEventKeypress
         bne   @loop
         ldx   #0
-        ldy   kMainMenuKeys, x
         beq   @loop                 ; key has no associated handler, so ignore it
         cpy   gLastKeyPressed       ; populated by WaitNextEvent
         beq   @dispatch
         inx
         bne   -                     ; always branches
@dispatch
         lda   kMainMenuKeyHandlersLo, x
         sta   @j+1
         lda   kMainMenuKeyHandlersHi, x
         sta   @j+2
@j       jsr   $FDFD                 ; SMC
         beq   MainMenuEventLoop
         rts
@onMouseMove
         +LDADDR MainMenuEventMouseMove
         +ST16 @j+1
         jmp   @j
@onClick
         +LDADDR MainMenuEventClick
         +ST16 @j+1
         jmp   @j

;------------------------------------------------------------------------------
; private

; Codes returned by event handlers
kStayOnMainMenu = 0                  ; This code is checked with BEQ/BNE, so it must be 0
kQuit = 1

kMainMenuMin = 10
kMainMenuCount = 4
.mainMenuSelectedIndex
         !byte 10

kMainMenuKeys                        ; must keep in sync with kMainMenuKeyHandlersLo/Hi arrays
                                     ; except for last byte ($00) which doesn't need an associated handler
                                     ; additionally, first 4 items correspond to the 4 visible menu items, in order
                                     ; (this is used by the Return handler to delegate to the appropriate handler)

         !byte $D0                   ; P
         !byte $C4                   ; D
         !byte $C6                   ; F
         !byte $D1                   ; Q
         !byte $8D                   ; Return
         !byte $8B                   ; up arrow
         !byte $88                   ; left arrow
         !byte $8A                   ; down arrow
         !byte $95                   ; right arrow
         !byte $A0                   ; space
         !byte $F0                   ; p
         !byte $E4                   ; D
         !byte $E6                   ; f
         !byte $F1                   ; q
         !byte $9B                   ; Esc
         !byte $93                   ; Ctrl-S
         !byte $D3                   ; S
         !byte $F3                   ; s
         !byte $00

kMainMenuKeyHandlersLo
         !byte <MainMenuEventP
         !byte <MainMenuEventD
         !byte <MainMenuEventF
         !byte <MainMenuEventQ
         !byte <MainMenuEventReturn
         !byte <MainMenuEventUp
         !byte <MainMenuEventUp
         !byte <MainMenuEventDown
         !byte <MainMenuEventDown
         !byte <MainMenuEventDown
         !byte <MainMenuEventP
         !byte <MainMenuEventD
         !byte <MainMenuEventF
         !byte <MainMenuEventQ
         !byte <MainMenuEventQ
         !byte <MainMenuEventCtrlS
         !byte <MainMenuEventCtrlS
         !byte <MainMenuEventCtrlS

kMainMenuKeyHandlersHi
         !byte >MainMenuEventP
         !byte >MainMenuEventD
         !byte >MainMenuEventF
         !byte >MainMenuEventQ
         !byte >MainMenuEventReturn
         !byte >MainMenuEventUp
         !byte >MainMenuEventUp
         !byte >MainMenuEventDown
         !byte >MainMenuEventDown
         !byte >MainMenuEventDown
         !byte >MainMenuEventP
         !byte >MainMenuEventD
         !byte >MainMenuEventF
         !byte >MainMenuEventQ
         !byte >MainMenuEventQ
         !byte >MainMenuEventCtrlS
         !byte >MainMenuEventCtrlS
         !byte >MainMenuEventCtrlS

MainMenuEventMouseMove
         jsr   MousePositionToLogicalCoordinates
         cpx   #kMainMenuMin
         bcc   StayOnMainMenuNoRefresh
         cpx   #(kMainMenuMin + kMainMenuCount)
         bcs   StayOnMainMenuNoRefresh
         cpy   #5
         bcc   StayOnMainMenuNoRefresh
         cpy   #11
         bcs   StayOnMainMenuNoRefresh
         cpx   .mainMenuSelectedIndex
         beq   StayOnMainMenuNoRefresh
         txa
         pha
         jsr   EraseMainMenuSelectionIndicator
         pla
         tax
         jmp   .MainMenuRedrawSelect

MainMenuEventClick
         jsr   ClickPositionToLogicalCoordinates
         cpx   #kMainMenuMin
         bcc   StayOnMainMenuNoRefresh
         cpx   #(kMainMenuMin + kMainMenuCount)
         bcs   StayOnMainMenuNoRefresh
         cpy   #5
         bcc   StayOnMainMenuNoRefresh
         cpy   #11
         bcs   StayOnMainMenuNoRefresh
         stx   .mainMenuSelectedIndex
         ; /!\ execution falls through here to MainMenuEventReturn

MainMenuEventReturn
         ; figure out which menu item is selected and exit via its handler
         ldx   .mainMenuSelectedIndex
         lda   kMainMenuKeyHandlersLo-kMainMenuMin, x
         sta   @crjmp+1
         lda   kMainMenuKeyHandlersHi-kMainMenuMin, x
         sta   @crjmp+2
@crjmp   jmp   $FDFD                 ; SMC

MainMenuEventUp
         jsr   EraseMainMenuSelectionIndicator
         dec   .mainMenuSelectedIndex
         ldx   .mainMenuSelectedIndex
         cpx   #kMainMenuMin
         bcs   +
         ldx   #(kMainMenuMin+kMainMenuCount-1)
+        jmp   .MainMenuRedrawSelect

MainMenuEventDown
         jsr   EraseMainMenuSelectionIndicator
         inc   .mainMenuSelectedIndex
         ldx   .mainMenuSelectedIndex
         cpx   #(kMainMenuMin+kMainMenuCount)
         bcc   .MainMenuRedrawSelect
         ldx   #kMainMenuMin
.MainMenuRedrawSelect
         jsr   SetMainMenuSelectionIndexAndRedraw
StayOnMainMenuNoRefresh
         ldx   #kStayOnMainMenu      ; Z=1 so caller will stay in main menu event loop
         clc
         rts

MainMenuEventP
         sec
         jsr   SelectSizeEventLoop
StayOnMainMenuWithFullRefresh
         ldx   #kStayOnMainMenu      ; Z=1 so caller will stay in main menu event loop
         sec                         ; C=1 so caller will do a full screen refresh
         rts

MainMenuEventD
         jsr   ShowDemo
         jmp   StayOnMainMenuWithFullRefresh

MainMenuEventF
         jsr   ShowCredits
         jmp   StayOnMainMenuWithFullRefresh

MainMenuEventQ
         ldx   #kQuit
         rts

MainMenuEventCtrlS
         jsr   ToggleSoundPrefAndStartMusic
         jmp   StayOnMainMenuNoRefresh

DrawMainMenuBackground
         jsr   DrawBoardForTitle
;
; Auto-solve the randomly chosen board.
; This board buffer persists in memory, so coming back to the main menu
; will just show the solved board.
;
         lda   #$60                  ; RTS opcode
         sta   FindValidRule1_SetExtendedInfo_Patch ; don't need extended info, so save a few cycles
         ldx   #>kTitleBoardBuffer
         ldy   #kTitleBoardSize
         jmp   SolveBoardAt

DrawMainMenuText
         +LDADDR MainMenuScript
         jsr   TileScript
         ldx   .mainMenuSelectedIndex
         ; /!\ execution falls through here to SetMainMenuSelectionIndexAndRedraw

SetMainMenuSelectionIndexAndRedraw
; in:    X = new selection index
         stx   .mainMenuSelectedIndex
         ldy   #$05                  ; HTAB, must match menu strings
         lda   #kSelectionIndicator
-        jsr   HidePointer
         jsr   DrawLargeCharacter
         jmp   ShowPointer

EraseMainMenuSelectionIndicator
         ldx   .mainMenuSelectedIndex
         ldy   #$05                  ; HTAB, must match menu strings
         lda   #kEmptyTile
         beq   -                     ; always branches

MainMenuScript
         +WPRINT  1, 6, sMainMenuLine1
         +WPRINT  2, 2, sMainMenuLine2
         +WPRINT  3, 2, sMainMenuLine3
         +WPRINT  4, 2, sMainMenuLine4
         +WPRINT  5, 5, sMainMenuLine5
         +WPRINT  6, 5, sMainMenuLine6
         +WPRINT  7, 6, sMainMenuLine7
         ; nothing on line 8
         +WPRINT  9, 5, sMainMenuLine9
         +WPRINT 10, 5, sMainMenuLine10
         +WPRINT 11, 5, sMainMenuLine11
         +WPRINT 12, 5, sMainMenuLine12
         +WPRINT 13, 5, sMainMenuLine13
         +WPRINT 14, 5, sMainMenuLine14
         !byte EXIT
