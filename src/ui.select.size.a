;license:MIT
;(c) 2022 by 4am
;
; 'select size' screen
;

; Codes returned by event handlers
kStayOnSelectSize = 0
kReturnToMainMenu = 1

kSelectSizeMin = 7
kSelectSizeCount = 6
.selectSizeSelectedIndex
         !byte 7

kSelectSizeKeys                      ; must keep in sync with kSelectSizeKeyHandlersLo/Hi arrays
                                     ; except for last byte ($00) which doesn't need an associated handler
         !byte $8D                   ; Return
         !byte $8B                   ; up arrow
         !byte $88                   ; left arrow
         !byte $8A                   ; down arrow
         !byte $95                   ; right arrow
         !byte $9B                   ; Esc
         !byte $00

kSelectSizeKeyHandlersLo
         !byte <SelectSizeEventReturn
         !byte <SelectSizeEventUp
         !byte <SelectSizeEventUp
         !byte <SelectSizeEventDown
         !byte <SelectSizeEventDown
         !byte <SelectSizeEventEsc

kSelectSizeKeyHandlersHi
         !byte >SelectSizeEventReturn
         !byte >SelectSizeEventUp
         !byte >SelectSizeEventUp
         !byte >SelectSizeEventDown
         !byte >SelectSizeEventDown
         !byte >SelectSizeEventEsc

; len(kSelectSizeVTABs) == len(kSelectSizeHTABs) == len(kSelectSizeStringsLo) == len(kSelectSizeStringsHi)
; or you will regret this
kSelectSizeVTABs
         !byte 1,2,3,4,6,7,8,9,10,11,12,13
kSelectSizeHTABs
         !byte 3,3,3,7,6,6,6,6,6 ,6 ,6 ,6
kSelectSizeStringsLo
         !byte <sSelectSizeLine1
         !byte <sSelectSizeLine2
         !byte <sSelectSizeLine3
         !byte <sSelectSizeLine4
         ; nothing on line 5
         !byte <sSelectSizeLine6
         !byte <sSelectSizeLine7
         !byte <sSelectSizeLine8
         !byte <sSelectSizeLine9
         !byte <sSelectSizeLine10
         !byte <sSelectSizeLine11
         !byte <sSelectSizeLine12
         !byte <sSelectSizeLine13
kSelectSizeStringsHi
         !byte >sSelectSizeLine1
         !byte >sSelectSizeLine2
         !byte >sSelectSizeLine3
         !byte >sSelectSizeLine4
         ; nothing on line 5
         !byte >sSelectSizeLine6
         !byte >sSelectSizeLine7
         !byte >sSelectSizeLine8
         !byte >sSelectSizeLine9
         !byte >sSelectSizeLine10
         !byte >sSelectSizeLine11
         !byte >sSelectSizeLine12
         !byte >sSelectSizeLine13

;------------------------------------------------------------------------------
; SelectSizeEventLoop
; display 'select size' menu
;
; in:    C clear if screen is already cleared and menu page is already drawn
;          (will happen if using arrow keys to move selection indicator)
;        C set if full screen clear & redraw is required
;          (will happen if user is coming from any other screen)
; out:   Z = 0
;------------------------------------------------------------------------------
SelectSizeEventLoop
         bcc   +
         jsr   DrawSelectSizeBackground
         jsr   DrawSelectSizeText
         bit   GFXMODE
+        bit   CLEARKBD
@keyloop
         lda   KBD
         bpl   @keyloop
         bit   CLEARKBD
         sta   gLastKeyPressed
         ldx   #0
-        ldy   kSelectSizeKeys, x
         beq   @keyloop              ; key has no associated handler, so ignore it
         cpy   gLastKeyPressed
         beq   @dispatch
         inx
         bne   -                     ; always branches
@dispatch
         lda   kSelectSizeKeyHandlersLo, x
         sta   @j+1
         lda   kSelectSizeKeyHandlersHi, x
         sta   @j+2
@j       jsr   $FDFD                 ; SMC
         beq   SelectSizeEventLoop
         rts

SelectSizeEventReturn
         brk

SelectSizeEventUp
         jsr   EraseSelectSizeSelectionIndicator
         dec   .selectSizeSelectedIndex
         ldx   .selectSizeSelectedIndex
         cpx   #kSelectSizeMin
         bcs   +
         ldx   #(kSelectSizeMin+kSelectSizeCount-1)
+        jsr   SetSelectSizeSelectionIndexAndRedraw
         jmp   StayOnSelectSizeNoRefresh

SelectSizeEventDown
         jsr   EraseSelectSizeSelectionIndicator
         inc   .selectSizeSelectedIndex
         ldx   .selectSizeSelectedIndex
         cpx   #(kSelectSizeMin+kSelectSizeCount)
         bcc   +
         ldx   #kSelectSizeMin
+        jsr   SetSelectSizeSelectionIndexAndRedraw
StayOnSelectSizeNoRefresh
         ldx   #kStayOnSelectSize    ; Z=1 so caller will stay in select size event loop
         clc
         rts

SelectSizeEventEsc
         ldx   #kReturnToMainMenu
         rts

DrawSelectSizeBackground
         jsr   Home
         jmp   DrawBoardForTitle

DrawSelectSizeText
         lda   #11
         sta   row1
-        ldy   row1
         lda   kSelectSizeVTABs, y
         sta   VTAB
         lda   kSelectSizeHTABs, y
         tax
         lda   kSelectSizeStringsLo, y
         pha
         lda   kSelectSizeStringsHi, y
         tay
         pla
         jsr   DrawLargeString
         dec   row1
         bpl   -
         ldx   .selectSizeSelectedIndex
         ; /!\ execution falls through here to DrawSelectSizeSelectionIndicator

SetSelectSizeSelectionIndexAndRedraw
; in:    X = new selection index
         stx   .selectSizeSelectedIndex
         ldy   kSelectSizeHTABs+8
         lda   #$01                  ; selection indicator character
         jmp   DrawLargeCharacter

EraseSelectSizeSelectionIndicator
         ldx   .selectSizeSelectedIndex
         ldy   kSelectSizeHTABs+8
         lda   #$00                  ; blank character
         jmp   DrawLargeCharacter
