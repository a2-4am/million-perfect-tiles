;license:MIT
;(c) 2022 by 4am
;
; 'select size' screen
;

;------------------------------------------------------------------------------
; SelectSizeEventLoop
; display 'select size' menu
;
; in:    C clear if screen is already cleared and menu page is already drawn
;          (will happen if using arrow keys to move selection indicator)
;        C set if full screen clear & redraw is required
;          (will happen if user is coming from any other screen)
; out:   Z = 0
;------------------------------------------------------------------------------
SelectSizeEventLoop
         bcc   @loop
         jsr   DrawSelectSize
         jsr   ClearPendingEvents
@loop
         jsr   WaitNextEvent
         cpx   #kEventMouseMove
         beq   @onMouseMove
         cpx   #kEventClick
         beq   @onClick
         cpx   #kEventKeypress
         bne   @loop
         ldx   #0
-        ldy   kSelectSizeKeys, x
         beq   @loop                 ; key has no associated handler, so ignore it
         cpy   gLastKeyPressed       ; populated by WaitNextEvent
         beq   @dispatch
         inx
         bne   -                     ; always branches
@dispatch
         lda   kSelectSizeKeyHandlersLo, x
         sta   @j+1
         lda   kSelectSizeKeyHandlersHi, x
         sta   @j+2
@j       jsr   $FDFD                 ; SMC
         beq   SelectSizeEventLoop
         rts
@onMouseMove
         +LDADDR SelectSizeEventMouseMove
         +ST16 @j+1
         jmp   @j
@onClick
         +LDADDR SelectSizeEventClick
         +ST16 @j+1
         jmp   @j

;------------------------------------------------------------------------------
; private

; Codes returned by event handlers
kStayOnSelectSize = 0                ; This code is checked with BEQ/BNE, so it must be 0
kReturnToMainMenu = 1

kSelectSizeMin = 7
kSelectSizeCount = 6
.selectSizeSelectedIndex
         !byte 7

kSelectSizeKeys                      ; must keep in sync with kSelectSizeKeyHandlersLo/Hi arrays
                                     ; except for last byte ($00) which doesn't need an associated handler
         !byte $8D                   ; Return
         !byte $8B                   ; up arrow
         !byte $88                   ; left arrow
         !byte $8A                   ; down arrow
         !byte $95                   ; right arrow
         !byte $A0                   ; space
         !byte $9B                   ; Esc
         !byte $00

kSelectSizeKeyHandlersLo
         !byte <SelectSizeEventReturn
         !byte <SelectSizeEventUp
         !byte <SelectSizeEventUp
         !byte <SelectSizeEventDown
         !byte <SelectSizeEventDown
         !byte <SelectSizeEventDown
         !byte <SelectSizeEventEsc

kSelectSizeKeyHandlersHi
         !byte >SelectSizeEventReturn
         !byte >SelectSizeEventUp
         !byte >SelectSizeEventUp
         !byte >SelectSizeEventDown
         !byte >SelectSizeEventDown
         !byte >SelectSizeEventDown
         !byte >SelectSizeEventEsc

StayOnSelectSizeNoRefresh0
         jmp   StayOnSelectSizeNoRefresh

SelectSizeEventMouseMove
         jsr   MousePositionToLogicalCoordinates
         cpx   #kSelectSizeMin
         bcc   StayOnSelectSizeNoRefresh0
         cpx   #(kSelectSizeMin + kSelectSizeCount)
         bcs   StayOnSelectSizeNoRefresh0
         cpy   #6
         bcc   StayOnSelectSizeNoRefresh0
         cpy   #10
         bcs   StayOnSelectSizeNoRefresh0
         cpx   .selectSizeSelectedIndex
         beq   StayOnSelectSizeNoRefresh0
         txa
         pha
         jsr   EraseSelectSizeSelectionIndicator
         pla
         tax
         jmp   .SelectSizeRedrawSelect

SelectSizeEventClick
         jsr   ClickPositionToLogicalCoordinates
         cpx   #kSelectSizeMin
         bcc   StayOnSelectSizeNoRefresh0
         cpx   #(kSelectSizeMin + kSelectSizeCount)
         bcs   StayOnSelectSizeNoRefresh0
         cpy   #6
         bcc   StayOnSelectSizeNoRefresh0
         cpy   #10
         bcs   StayOnSelectSizeNoRefresh0
         stx   .selectSizeSelectedIndex
         ; /!\ execution falls through here to SelectSizeEventReturn

SelectSizeEventReturn
         bit   TEXTMODE
         lda   .selectSizeSelectedIndex
         sec
         sbc   #(kSelectSizeMin-3)
         asl
         sta   logical_board_size
         sta   gLastSelectedBoardSize
         lda   RNDSEED+1
         and   #1
         tay
         lda   RNDSEED
         +ST16 gLastSelectedBoardIndex
ReloadBoard
         ldx   #>kUserBoardBuffer
         jsr   nth
         jsr   FindEmptyCoordinatesForUser
         stx   gFocusedRow
         sty   gFocusedColumn
         sec
         jsr   PlayEventLoop
         ; TODO maybe another dispatch table here?
         cpx   #kRequestedSkip
         beq   SelectSizeEventReturn
         cpx   #kRequestedRestart
         bne   +
         jsr   Home
         lda   gLastSelectedBoardSize
         sta   logical_board_size
         +LD16 gLastSelectedBoardIndex
         jmp   ReloadBoard
+        cpx   #kReturnToSelectSize
         bne   +
         ldx   #kStayOnSelectSize
         sec
         rts
+
         ; TODO completed puzzle
         brk

SelectSizeEventUp
         jsr   EraseSelectSizeSelectionIndicator
         dec   .selectSizeSelectedIndex
         ldx   .selectSizeSelectedIndex
         cpx   #kSelectSizeMin
         bcs   +
         ldx   #(kSelectSizeMin+kSelectSizeCount-1)
+        jmp   .SelectSizeRedrawSelect

SelectSizeEventDown
         jsr   EraseSelectSizeSelectionIndicator
         inc   .selectSizeSelectedIndex
         ldx   .selectSizeSelectedIndex
         cpx   #(kSelectSizeMin+kSelectSizeCount)
         bcc   .SelectSizeRedrawSelect
         ldx   #kSelectSizeMin
.SelectSizeRedrawSelect
         jsr   SetSelectSizeSelectionIndexAndRedraw
         jsr   ShowPointer
StayOnSelectSizeNoRefresh
         ldx   #kStayOnSelectSize    ; Z=1 so caller will stay in select size event loop
         clc
         rts

SelectSizeEventEsc
         ldx   #kReturnToMainMenu
         rts

DrawSelectSize
         +LDADDR SelectSizeScript
         jsr   TileScript
         ldx   .selectSizeSelectedIndex
         ; /!\ execution falls through here to SetSelectSizeSelectionIndexAndRedraw

SetSelectSizeSelectionIndexAndRedraw
; in:    X = new selection index
         stx   .selectSizeSelectedIndex
         ldy   #$06                  ; HTAB, must match menu strings
         lda   #kSelectionIndicator
-        jsr   HidePointer
         jsr   DrawLargeCharacter
         jmp   ShowPointer

EraseSelectSizeSelectionIndicator
         ldx   .selectSizeSelectedIndex
         ldy   #$06                  ; HTAB, must match menu strings
         lda   #kEmptyTile
         beq   -                     ; always branches

SelectSizeScript
         !byte HOME
         !byte BOARD, >kTitleBoardBuffer
         !byte WPRINT, 1, 3
         !word              sSelectSizeLine1
         !byte WPRINT, 2, 3
         !word              sSelectSizeLine2
         !byte WPRINT, 3, 3
         !word              sSelectSizeLine3
         !byte WPRINT, 4, 7
         !word              sSelectSizeLine4
         ; nothing on line 5
         !byte WPRINT, 6, 6
         !word              sSelectSizeLine6
         !byte WPRINT, 7, 6
         !word              sSelectSizeLine7
         !byte WPRINT, 8, 6
         !word              sSelectSizeLine8
         !byte WPRINT, 9, 6
         !word              sSelectSizeLine9
         !byte WPRINT,10, 6
         !word              sSelectSizeLine10
         !byte WPRINT,11, 6
         !word              sSelectSizeLine11
         !byte WPRINT,12, 6
         !word              sSelectSizeLine12
         !byte WPRINT,13, 6
         !word              sSelectSizeLine13
         !byte EXIT
