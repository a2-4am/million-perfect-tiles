;license:MIT
;(c) 2022 by 4am
;
; font drawing routines for Million Perfect Tiles Wide
;
; Public functions:
; - DrawLargeString
; - DrawLargeCharacter
;

WideHGRTops
         !byte 8,19,30,41,52,63,74,85,96,107,118,129,140,151,162,173

!macro COMPUTE_DRAW_ADDRESSES {
         ldx   char_row
         lda   HGRLO, x
         sta   hgr_base_ptr
         lda   HGRHI, x
         sta   hgr_base_ptr+1        ; -> base address of top row to draw (used for upper-left block of each character)
         ldx   char_index            ; X = 0-based index into LeftFontRow0 array for the character we're drawing
         ldy   HTAB
}

!macro INC_AND_RECOMPUTE_DRAW_ADDRESSES {
         inc   char_row
         +COMPUTE_DRAW_ADDRESSES
}

;------------------------------------------------------------------------------
; DrawLargeString
;
; in:    A/Y points to length-prefixed string (Pascal style)
;        X contains logical column number (0x00..0x0F)
;        VTAB contains logical line number (0x00..0x0F)
;        pointer is hidden
; out:   clobbers all registers & flags
;------------------------------------------------------------------------------
DrawLargeString
         +ST16 string_ptr
         stx   tile_column
         ldy   #0
         lda   (string_ptr), y
         sta   string_len
         clc
         adc   tile_column
         sta   tile_column
         ldx   VTAB
-        ldy   string_len
         lda   (string_ptr), y
         dec   tile_column
         ldy   tile_column
         jsr   DrawLargeCharacter
         dec   string_len
         bne   -
         rts

;------------------------------------------------------------------------------
; DrawLargeCharacter
;
; in:    A contains 0x2E..0x5A (for characters) or 0x00..0x04 (for tiles)
;          high bit is stripped internally, so A=0x82 on entry is same as A=0x02
;        X contains logical line number (0x00..0x0F)
;        Y contains logical column number (0x00..0x0F)
;        pointer is hidden
;        top HGR row = 8 + (11 * X)
;        character will be drawn at byte offset = 2 + (2 * Y)
; out:   preserves all registers & flags
;------------------------------------------------------------------------------
DrawLargeCharacter
         php
         pha
         and   #$7F
         cmp   #$05
         bcc   +
         sbc   #$29
+        sta   char_index
         stx   tmpx
         sty   tmpy
         jsr   LogicalColumnToPhysicalColumn
         sty   HTAB
         lda   WideHGRTops, x
         sta   char_row

         +COMPUTE_DRAW_ADDRESSES
         lda   LeftFontRow0, x       ; draw row 0, byte 0
         sta   (hgr_base_ptr), y
         iny
         lda   RightFontRow0, x      ; draw row 0, byte 1
         sta   (hgr_base_ptr), y

         +INC_AND_RECOMPUTE_DRAW_ADDRESSES
         lda   LeftFontRow1, x       ; draw row 1, byte 0
         sta   (hgr_base_ptr), y
         iny
         lda   RightFontRow1, x      ; draw row 1, byte 1
         sta   (hgr_base_ptr), y

         +INC_AND_RECOMPUTE_DRAW_ADDRESSES
         lda   LeftFontRow2, x       ; draw row 2, byte 0
         sta   (hgr_base_ptr), y
         iny
         lda   RightFontRow2, x      ; draw row 2, byte 1
         sta   (hgr_base_ptr), y

         +INC_AND_RECOMPUTE_DRAW_ADDRESSES
         lda   LeftFontRow3, x       ; draw row 3, byte 0
         sta   (hgr_base_ptr), y
         iny
         lda   RightFontRow3, x      ; draw row 3, byte 1
         sta   (hgr_base_ptr), y

         +INC_AND_RECOMPUTE_DRAW_ADDRESSES
         lda   LeftFontRow4, x       ; draw row 4, byte 0
         sta   (hgr_base_ptr), y
         iny
         lda   RightFontRow4, x      ; draw row 4, byte 1
         sta   (hgr_base_ptr), y

         +INC_AND_RECOMPUTE_DRAW_ADDRESSES
         lda   LeftFontRow5, x       ; draw row 5, byte 0
         sta   (hgr_base_ptr), y
         iny
         lda   RightFontRow5, x      ; draw row 5, byte 1
         sta   (hgr_base_ptr), y

         +INC_AND_RECOMPUTE_DRAW_ADDRESSES
         lda   LeftFontRow6, x       ; draw row 6, byte 0
         sta   (hgr_base_ptr), y
         iny
         lda   RightFontRow6, x      ; draw row 6, byte 1
         sta   (hgr_base_ptr), y

         +INC_AND_RECOMPUTE_DRAW_ADDRESSES
         lda   LeftFontRow7, x       ; draw row 7, byte 0
         sta   (hgr_base_ptr), y
         iny
         lda   RightFontRow7, x      ; draw row 7, byte 1
         sta   (hgr_base_ptr), y

         ldx   tmpx
         ldy   tmpy
         pla
         plp
         rts
