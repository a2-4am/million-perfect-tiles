;license:MIT
;(c) 2023 by 4am
;
; credits page
;
; public functions:
; - ShowCredits

!macro CFIZZLEOUT {
         !byte CALL
         !word CreditsFizzleToBlack
}

!macro CFIZZLEIN {
         !byte CALL
         !word CreditsFizzle
}

!macro OFFSCREENPRINT v, h, s {
         !byte CALL
         !word CreditsPrintToBuffer
         !byte v
         !byte h
         !word s
}

;------------------------------------------------------------------------------
; ShowCredits
; display credits until keypress or mouse click or completion
;
; in:    none
; out:   all other registers & flags clobbered
;------------------------------------------------------------------------------
ShowCredits
         +LDADDR CreditsScript
         jmp   TileScript

;------------------------------------------------------------------------------
; private

CreditsScript
         +CFIZZLEOUT
         +OFFSCREENPRINT 3, 1, sAboutCopyright3
         +OFFSCREENPRINT 4, 1, sAboutCopyright4
         +OFFSCREENPRINT 5, 1, sAboutCopyright5
         +OFFSCREENPRINT 6, 2, sAboutCopyright6
         +OFFSCREENPRINT 10, 5, sAboutCopyright10
         +OFFSCREENPRINT 11, 5, sAboutCopyright11
         +OFFSCREENPRINT 12, 5, sAboutCopyright12
         +CFIZZLEIN
         !byte WAIT ,20

         +CFIZZLEOUT
         +OFFSCREENPRINT 6, 1, sAboutCompression6
         +OFFSCREENPRINT 7, 1, sAboutCompression7
         +OFFSCREENPRINT 8, 1, sAboutCompression8
         +OFFSCREENPRINT 9, 4, sAboutCompression9
         +CFIZZLEIN
         !byte WAIT ,10

         +CPRINT 7, 8, sAboutCompressed0
         !byte WAIT ,1
         +CPRINT 7, 9, sAboutCompressed1
         !byte WAIT ,1
         +CPRINT 7,10, sAboutCompressed2
         !byte WAIT ,1
         +CPRINT 7,11, sAboutCompressed3
         !byte WAIT ,1
         +CPRINT 7,12, sAboutCompressed4
         !byte WAIT ,1
         +CPRINT 7,13, sAboutCompressed5
         !byte WAIT ,1
         +CPRINT 7,14, sAboutCompressed6
         !byte WAIT ,1
         +CPRINT 7,15, sAboutCompressed7
         !byte WAIT ,1
         +CPRINT 7,16, sAboutCompressed8
         !byte WAIT ,1
         +CPRINT 7,17, sAboutCompressed9
         !byte WAIT ,1
         +CPRINT 7,18, sAboutCompressed10
         !byte WAIT,15
         +CPRINT 7,8, sAboutCompressedHide

         +CFIZZLEOUT
         +OFFSCREENPRINT 5, 3, sAboutMusic5
         +OFFSCREENPRINT 6, 1, sAboutMusic6
         +OFFSCREENPRINT 7, 1, sAboutMusic7
         +OFFSCREENPRINT 8, 1, sAboutMusic8
         +OFFSCREENPRINT 9, 3, sAboutMusic9
         +CFIZZLEIN
         !byte WAIT ,20

         +CFIZZLEOUT
         +OFFSCREENPRINT 6, 1, sAboutPT3Lib6
         +OFFSCREENPRINT 7, 1, sAboutPT3Lib7
         +OFFSCREENPRINT 8, 1, sAboutPT3Lib8
         +OFFSCREENPRINT 9, 4, sAboutPT3Lib9
         +CFIZZLEIN
         !byte WAIT ,20

         +CFIZZLEOUT
         +OFFSCREENPRINT 6, 1, sAboutMouse6
         +OFFSCREENPRINT 7, 1, sAboutMouse7
         +OFFSCREENPRINT 8, 1, sAboutMouse8
         +OFFSCREENPRINT 9, 2, sAboutMouse9
         +CFIZZLEIN
         !byte WAIT ,20

         +CFIZZLEOUT
         +OFFSCREENPRINT 6, 1, sAboutTesting6
         +OFFSCREENPRINT 7, 1, sAboutTesting7
         +OFFSCREENPRINT 8, 1, sAboutTesting8
         +OFFSCREENPRINT 9, 4, sAboutTesting9
         +CFIZZLEIN
         !byte WAIT ,20

         +CFIZZLEOUT
         !byte EXIT

CreditsFizzleToBlack
         ldy   #0
         tya
-        sta   kCreditsBoardBuffer, y
         iny
         bne   -
         ; /!\ execution falls through here to CreditsFizzle

CreditsFizzle
         ldx   #>kCreditsBoardBuffer
         jsr   GridFizzle

         ldy   #0
-        lda   kTitleBoardBuffer, y
         sta   kCreditsBoardBuffer, y
         iny
         bne   -
         rts

CreditsPrintToBuffer
         jsr   GetPrintParams
         +ST16 string_ptr
         ldy   HTAB
         dey
         sty   HTAB
         ldx   VTAB
         +CalculateRowBase
         clc
         adc   HTAB
         sta   @b+1
         ldy   #0
         lda   (string_ptr), y
         tay
@a       lda   (string_ptr), y
@b       sta   kCreditsBoardBuffer, y           ; SMC low byte
         dey
         bne   @a
         rts
